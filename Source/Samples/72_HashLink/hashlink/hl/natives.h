// Generated by HLC 4.1.2 (HL v4)
#ifndef HL_NATIVES_H
#define HL_NATIVES_H
// Abstract decls
typedef struct _hl_bytes_map hl_bytes_map;
typedef struct _hl_random hl_random;
typedef struct _hl_ssl_cert hl_ssl_cert;
typedef struct _hl_ssl_pkey hl_ssl_pkey;
typedef struct _hl_urho3d_application hl_urho3d_application;
typedef struct _hl_urho3d_color hl_urho3d_color;
typedef struct _hl_urho3d_graphics_animatedmodel hl_urho3d_graphics_animatedmodel;
typedef struct _hl_urho3d_graphics_animation hl_urho3d_graphics_animation;
typedef struct _hl_urho3d_graphics_billboard hl_urho3d_graphics_billboard;
typedef struct _hl_urho3d_graphics_billboardset hl_urho3d_graphics_billboardset;
typedef struct _hl_urho3d_graphics_camera hl_urho3d_graphics_camera;
typedef struct _hl_urho3d_graphics_decalset hl_urho3d_graphics_decalset;
typedef struct _hl_urho3d_graphics_drawable hl_urho3d_graphics_drawable;
typedef struct _hl_urho3d_graphics_light hl_urho3d_graphics_light;
typedef struct _hl_urho3d_graphics_light_bias_parameters hl_urho3d_graphics_light_bias_parameters;
typedef struct _hl_urho3d_graphics_light_cascade_parameters hl_urho3d_graphics_light_cascade_parameters;
typedef struct _hl_urho3d_graphics_material hl_urho3d_graphics_material;
typedef struct _hl_urho3d_graphics_model hl_urho3d_graphics_model;
typedef struct _hl_urho3d_graphics_octree hl_urho3d_graphics_octree;
typedef struct _hl_urho3d_graphics_pod_billboard hl_urho3d_graphics_pod_billboard;
typedef struct _hl_urho3d_graphics_ray_query_result hl_urho3d_graphics_ray_query_result;
typedef struct _hl_urho3d_graphics_ray_query_results hl_urho3d_graphics_ray_query_results;
typedef struct _hl_urho3d_graphics_render_path hl_urho3d_graphics_render_path;
typedef struct _hl_urho3d_graphics_skybox hl_urho3d_graphics_skybox;
typedef struct _hl_urho3d_graphics_staticmodel hl_urho3d_graphics_staticmodel;
typedef struct _hl_urho3d_graphics_tanimation_state hl_urho3d_graphics_tanimation_state;
typedef struct _hl_urho3d_graphics_technique hl_urho3d_graphics_technique;
typedef struct _hl_urho3d_graphics_texture hl_urho3d_graphics_texture;
typedef struct _hl_urho3d_graphics_viewport hl_urho3d_graphics_viewport;
typedef struct _hl_urho3d_graphics_zone hl_urho3d_graphics_zone;
typedef struct _hl_urho3d_input_touch_state hl_urho3d_input_touch_state;
typedef struct _hl_urho3d_intvector2 hl_urho3d_intvector2;
typedef struct _hl_urho3d_math_boundingbox hl_urho3d_math_boundingbox;
typedef struct _hl_urho3d_math_intrect hl_urho3d_math_intrect;
typedef struct _hl_urho3d_math_quaternion hl_urho3d_math_quaternion;
typedef struct _hl_urho3d_math_ray hl_urho3d_math_ray;
typedef struct _hl_urho3d_math_tintvector2 hl_urho3d_math_tintvector2;
typedef struct _hl_urho3d_math_tquaternion hl_urho3d_math_tquaternion;
typedef struct _hl_urho3d_math_tvector2 hl_urho3d_math_tvector2;
typedef struct _hl_urho3d_math_tvector3 hl_urho3d_math_tvector3;
typedef struct _hl_urho3d_math_vector2 hl_urho3d_math_vector2;
typedef struct _hl_urho3d_math_vector3 hl_urho3d_math_vector3;
typedef struct _hl_urho3d_physics_collision_shape hl_urho3d_physics_collision_shape;
typedef struct _hl_urho3d_physics_rigid_body hl_urho3d_physics_rigid_body;
typedef struct _hl_urho3d_resource_xml_file hl_urho3d_resource_xml_file;
typedef struct _hl_urho3d_scene_component hl_urho3d_scene_component;
typedef struct _hl_urho3d_scene_logic_component hl_urho3d_scene_logic_component;
typedef struct _hl_urho3d_scene_node hl_urho3d_scene_node;
typedef struct _hl_urho3d_scene_pod_node hl_urho3d_scene_pod_node;
typedef struct _hl_urho3d_scene_scene hl_urho3d_scene_scene;
typedef struct _hl_urho3d_stringhash hl_urho3d_stringhash;
typedef struct _hl_urho3d_tstringhash hl_urho3d_tstringhash;
typedef struct _hl_urho3d_tvariant hl_urho3d_tvariant;
typedef struct _hl_urho3d_variant hl_urho3d_variant;
typedef struct _hl_urho3d_variantmap hl_urho3d_variantmap;
typedef struct _urho3d_context urho3d_context;

#include <hl/natives.h>
#include <_std/String.h>

// Natives functions
HL_API void Urho3D__application_subscribe_to_event(hl_urho3d_application*,hl_urho3d_stringhash*,vdynamic*,String);
HL_API hl_urho3d_application* Urho3D__create_application(urho3d_context*);
HL_API urho3d_context* Urho3D__create_context(void);
HL_API hl_urho3d_intvector2* Urho3D__create_intvector2(int,int);
HL_API hl_urho3d_resource_xml_file* Urho3D__create_resource_xml_file(urho3d_context*,String);
HL_API hl_urho3d_stringhash* Urho3D__create_stringhash(String);
HL_API hl_urho3d_tvariant* Urho3D__create_tvariant(void);
HL_API hl_urho3d_variant* Urho3D__create_variant(void);
HL_API hl_urho3d_variantmap* Urho3D__create_variantmap(void);
HL_API vbyte* Urho3D__get_stringhash_string(hl_urho3d_stringhash*);
HL_API hl_urho3d_tvariant* Urho3D__get_value(hl_urho3d_variantmap*,hl_urho3d_tstringhash*);
HL_API hl_urho3d_graphics_tanimation_state* Urho3D__graphics_animatedmodel_add_animation_state(urho3d_context*,hl_urho3d_graphics_animatedmodel*,hl_urho3d_graphics_animation*);
HL_API hl_urho3d_graphics_animatedmodel* Urho3D__graphics_animatedmodel_cast_from_component(urho3d_context*,hl_urho3d_scene_component*);
HL_API hl_urho3d_scene_component* Urho3D__graphics_animatedmodel_cast_to_component(urho3d_context*,hl_urho3d_graphics_animatedmodel*);
HL_API hl_urho3d_graphics_animatedmodel* Urho3D__graphics_animatedmodel_create(urho3d_context*);
HL_API hl_urho3d_graphics_tanimation_state* Urho3D__graphics_animatedmodel_get_animation_state(urho3d_context*,hl_urho3d_graphics_animatedmodel*,int);
HL_API bool Urho3D__graphics_animatedmodel_get_cast_shadows(urho3d_context*,hl_urho3d_graphics_animatedmodel*);
HL_API hl_urho3d_graphics_material* Urho3D__graphics_animatedmodel_get_material(urho3d_context*,hl_urho3d_graphics_animatedmodel*);
HL_API hl_urho3d_graphics_model* Urho3D__graphics_animatedmodel_get_model(urho3d_context*,hl_urho3d_graphics_animatedmodel*);
HL_API bool Urho3D__graphics_animatedmodel_get_occludee(urho3d_context*,hl_urho3d_graphics_animatedmodel*);
HL_API bool Urho3D__graphics_animatedmodel_get_occluder(urho3d_context*,hl_urho3d_graphics_animatedmodel*);
HL_API void Urho3D__graphics_animatedmodel_set_cast_shadows(urho3d_context*,hl_urho3d_graphics_animatedmodel*,bool);
HL_API void Urho3D__graphics_animatedmodel_set_material(urho3d_context*,hl_urho3d_graphics_animatedmodel*,hl_urho3d_graphics_material*);
HL_API void Urho3D__graphics_animatedmodel_set_model(urho3d_context*,hl_urho3d_graphics_animatedmodel*,hl_urho3d_graphics_model*);
HL_API void Urho3D__graphics_animatedmodel_set_occludee(urho3d_context*,hl_urho3d_graphics_animatedmodel*,bool);
HL_API void Urho3D__graphics_animatedmodel_set_occluder(urho3d_context*,hl_urho3d_graphics_animatedmodel*,bool);
HL_API hl_urho3d_graphics_animation* Urho3D__graphics_animation_create(urho3d_context*,String);
HL_API float Urho3D__graphics_animation_get_length(urho3d_context*,hl_urho3d_graphics_animation*);
HL_API bool Urho3D__graphics_billboard_get_enabled(urho3d_context*,hl_urho3d_graphics_billboard*);
HL_API hl_urho3d_math_tvector3* Urho3D__graphics_billboard_get_position(urho3d_context*,hl_urho3d_graphics_billboard*);
HL_API float Urho3D__graphics_billboard_get_rotation(urho3d_context*,hl_urho3d_graphics_billboard*);
HL_API hl_urho3d_math_tvector2* Urho3D__graphics_billboard_get_size(urho3d_context*,hl_urho3d_graphics_billboard*);
HL_API void Urho3D__graphics_billboard_set_enabled(urho3d_context*,hl_urho3d_graphics_billboard*,bool);
HL_API void Urho3D__graphics_billboard_set_position(urho3d_context*,hl_urho3d_graphics_billboard*,hl_urho3d_math_tvector3*);
HL_API void Urho3D__graphics_billboard_set_rotation(urho3d_context*,hl_urho3d_graphics_billboard*,float);
HL_API void Urho3D__graphics_billboard_set_size(urho3d_context*,hl_urho3d_graphics_billboard*,hl_urho3d_math_tvector2*);
HL_API hl_urho3d_graphics_billboardset* Urho3D__graphics_billboardset_cast_from_component(urho3d_context*,hl_urho3d_scene_component*);
HL_API hl_urho3d_scene_component* Urho3D__graphics_billboardset_cast_to_component(urho3d_context*,hl_urho3d_graphics_billboardset*);
HL_API void Urho3D__graphics_billboardset_commit(urho3d_context*,hl_urho3d_graphics_billboardset*);
HL_API hl_urho3d_graphics_billboardset* Urho3D__graphics_billboardset_create(urho3d_context*);
HL_API hl_urho3d_graphics_billboard* Urho3D__graphics_billboardset_get_billboard(urho3d_context*,hl_urho3d_graphics_billboardset*,int);
HL_API hl_urho3d_graphics_billboard* Urho3D__graphics_billboardset_get_billboard_from_pod(urho3d_context*,hl_urho3d_graphics_pod_billboard*,int);
HL_API hl_urho3d_graphics_billboard* Urho3D__graphics_billboardset_get_billboard_from_pod(urho3d_context*,hl_urho3d_graphics_pod_billboard*,int);
HL_API hl_urho3d_graphics_pod_billboard* Urho3D__graphics_billboardset_get_billboards(urho3d_context*,hl_urho3d_graphics_billboardset*);
HL_API hl_urho3d_graphics_material* Urho3D__graphics_billboardset_get_material(urho3d_context*,hl_urho3d_graphics_billboardset*);
HL_API int Urho3D__graphics_billboardset_get_numBillboards(urho3d_context*,hl_urho3d_graphics_billboardset*);
HL_API bool Urho3D__graphics_billboardset_get_sorted(urho3d_context*,hl_urho3d_graphics_billboardset*);
HL_API void Urho3D__graphics_billboardset_set_material(urho3d_context*,hl_urho3d_graphics_billboardset*,hl_urho3d_graphics_material*);
HL_API void Urho3D__graphics_billboardset_set_numBillboards(urho3d_context*,hl_urho3d_graphics_billboardset*,int);
HL_API void Urho3D__graphics_billboardset_set_sorted(urho3d_context*,hl_urho3d_graphics_billboardset*,bool);
HL_API hl_urho3d_graphics_camera* Urho3D__graphics_camera_cast_from_component(urho3d_context*,hl_urho3d_scene_component*);
HL_API hl_urho3d_scene_component* Urho3D__graphics_camera_cast_to_component(urho3d_context*,hl_urho3d_graphics_camera*);
HL_API hl_urho3d_graphics_camera* Urho3D__graphics_camera_create(urho3d_context*);
HL_API float Urho3D__graphics_camera_get_far_clip(urho3d_context*,hl_urho3d_graphics_camera*);
HL_API float Urho3D__graphics_camera_get_fov(urho3d_context*,hl_urho3d_graphics_camera*);
HL_API hl_urho3d_math_ray* Urho3D__graphics_camera_get_screen_ray(urho3d_context*,hl_urho3d_graphics_camera*,float,float);
HL_API int Urho3D__graphics_camera_get_view_override_flags(urho3d_context*,hl_urho3d_graphics_camera*);
HL_API void Urho3D__graphics_camera_set_far_clip(urho3d_context*,hl_urho3d_graphics_camera*,float);
HL_API void Urho3D__graphics_camera_set_fov(urho3d_context*,hl_urho3d_graphics_camera*,float);
HL_API void Urho3D__graphics_camera_set_view_override_flags(urho3d_context*,hl_urho3d_graphics_camera*,int);
HL_API void Urho3D__graphics_decalset_add_decal(urho3d_context*,hl_urho3d_graphics_decalset*,hl_urho3d_graphics_drawable*,hl_urho3d_math_tvector3*,hl_urho3d_math_tquaternion*,float,float,float,hl_urho3d_math_tvector2*,hl_urho3d_math_tvector2*,float,float,int);
HL_API hl_urho3d_graphics_decalset* Urho3D__graphics_decalset_cast_from_component(urho3d_context*,hl_urho3d_scene_component*);
HL_API hl_urho3d_scene_component* Urho3D__graphics_decalset_cast_to_component(urho3d_context*,hl_urho3d_graphics_decalset*);
HL_API hl_urho3d_graphics_decalset* Urho3D__graphics_decalset_create(urho3d_context*);
HL_API hl_urho3d_graphics_material* Urho3D__graphics_decalset_get_material(urho3d_context*,hl_urho3d_graphics_decalset*);
HL_API void Urho3D__graphics_decalset_set_material(urho3d_context*,hl_urho3d_graphics_decalset*,hl_urho3d_graphics_material*);
HL_API hl_urho3d_scene_node* Urho3D__graphics_drawable_get_node(urho3d_context*,hl_urho3d_graphics_drawable*);
HL_API int Urho3D__graphics_get_height(urho3d_context*);
HL_API int Urho3D__graphics_get_width(urho3d_context*);
HL_API hl_urho3d_graphics_light_bias_parameters* Urho3D__graphics_light_bias_parameters_create(float,float,float);
HL_API hl_urho3d_graphics_light_cascade_parameters* Urho3D__graphics_light_cascade_parameters_create(float,float,float,float,float,float);
HL_API hl_urho3d_graphics_light* Urho3D__graphics_light_cast_from_component(urho3d_context*,hl_urho3d_scene_component*);
HL_API hl_urho3d_scene_component* Urho3D__graphics_light_cast_to_component(urho3d_context*,hl_urho3d_graphics_light*);
HL_API hl_urho3d_graphics_light* Urho3D__graphics_light_create(urho3d_context*);
HL_API bool Urho3D__graphics_light_get_cast_shadows(urho3d_context*,hl_urho3d_graphics_light*);
HL_API hl_urho3d_color* Urho3D__graphics_light_get_color(urho3d_context*,hl_urho3d_graphics_light*);
HL_API float Urho3D__graphics_light_get_fov(urho3d_context*,hl_urho3d_graphics_light*);
HL_API int Urho3D__graphics_light_get_light_type(urho3d_context*,hl_urho3d_graphics_light*);
HL_API hl_urho3d_graphics_texture* Urho3D__graphics_light_get_ramp_texture(urho3d_context*,hl_urho3d_graphics_light*);
HL_API float Urho3D__graphics_light_get_range(urho3d_context*,hl_urho3d_graphics_light*);
HL_API hl_urho3d_graphics_light_bias_parameters* Urho3D__graphics_light_get_shadow_bias(urho3d_context*,hl_urho3d_graphics_light*);
HL_API hl_urho3d_graphics_light_cascade_parameters* Urho3D__graphics_light_get_shadow_cascade(urho3d_context*,hl_urho3d_graphics_light*);
HL_API float Urho3D__graphics_light_get_shadow_distance(urho3d_context*,hl_urho3d_graphics_light*);
HL_API float Urho3D__graphics_light_get_shadow_fade_distance(urho3d_context*,hl_urho3d_graphics_light*);
HL_API float Urho3D__graphics_light_get_shadow_near_far_ratio(urho3d_context*,hl_urho3d_graphics_light*);
HL_API float Urho3D__graphics_light_get_shadow_resolution(urho3d_context*,hl_urho3d_graphics_light*);
HL_API float Urho3D__graphics_light_get_specular_intensity(urho3d_context*,hl_urho3d_graphics_light*);
HL_API void Urho3D__graphics_light_set_cast_shadows(urho3d_context*,hl_urho3d_graphics_light*,bool);
HL_API void Urho3D__graphics_light_set_color(urho3d_context*,hl_urho3d_graphics_light*,hl_urho3d_color*);
HL_API void Urho3D__graphics_light_set_fov(urho3d_context*,hl_urho3d_graphics_light*,float);
HL_API void Urho3D__graphics_light_set_light_type(urho3d_context*,hl_urho3d_graphics_light*,int);
HL_API void Urho3D__graphics_light_set_ramp_texture(urho3d_context*,hl_urho3d_graphics_light*,hl_urho3d_graphics_texture*);
HL_API void Urho3D__graphics_light_set_range(urho3d_context*,hl_urho3d_graphics_light*,float);
HL_API void Urho3D__graphics_light_set_shadow_bias(urho3d_context*,hl_urho3d_graphics_light*,hl_urho3d_graphics_light_bias_parameters*);
HL_API void Urho3D__graphics_light_set_shadow_cascade(urho3d_context*,hl_urho3d_graphics_light*,hl_urho3d_graphics_light_cascade_parameters*);
HL_API void Urho3D__graphics_light_set_shadow_distance(urho3d_context*,hl_urho3d_graphics_light*,float);
HL_API void Urho3D__graphics_light_set_shadow_fade_distance(urho3d_context*,hl_urho3d_graphics_light*,float);
HL_API void Urho3D__graphics_light_set_shadow_near_far_ratio(urho3d_context*,hl_urho3d_graphics_light*,float);
HL_API void Urho3D__graphics_light_set_shadow_resolution(urho3d_context*,hl_urho3d_graphics_light*,float);
HL_API void Urho3D__graphics_light_set_specular_intensity(urho3d_context*,hl_urho3d_graphics_light*,float);
HL_API hl_urho3d_graphics_material* Urho3D__graphics_material_create(urho3d_context*,String);
HL_API hl_urho3d_graphics_material* Urho3D__graphics_material_create_empty(urho3d_context*);
HL_API hl_urho3d_graphics_light_bias_parameters* Urho3D__graphics_material_get_depth_bias(urho3d_context*,hl_urho3d_graphics_material*);
HL_API void Urho3D__graphics_material_set_depth_bias(urho3d_context*,hl_urho3d_graphics_material*,hl_urho3d_graphics_light_bias_parameters*);
HL_API void Urho3D__graphics_material_set_technique(urho3d_context*,hl_urho3d_graphics_material*,int,hl_urho3d_graphics_technique*,int,float);
HL_API void Urho3D__graphics_material_set_texture(urho3d_context*,hl_urho3d_graphics_material*,int,hl_urho3d_graphics_texture*);
HL_API hl_urho3d_graphics_model* Urho3D__graphics_model_create(urho3d_context*,String);
HL_API hl_urho3d_graphics_ray_query_results* Urho3D__graphics_octree_raycast_single(urho3d_context*,hl_urho3d_graphics_octree*,hl_urho3d_math_ray*,int,float,int,int);
HL_API hl_urho3d_graphics_drawable* Urho3D__graphics_ray_query_result_get_drawable(hl_urho3d_graphics_ray_query_result*);
HL_API hl_urho3d_math_tvector3* Urho3D__graphics_ray_query_result_get_position(hl_urho3d_graphics_ray_query_result*);
HL_API hl_urho3d_graphics_ray_query_result* Urho3D__graphics_ray_query_results_get_result(hl_urho3d_graphics_ray_query_results*,int);
HL_API int Urho3D__graphics_ray_query_results_get_size(hl_urho3d_graphics_ray_query_results*);
HL_API hl_urho3d_variant* Urho3D__graphics_render_get_shader_parameter(urho3d_context*,hl_urho3d_graphics_render_path*,String);
HL_API bool Urho3D__graphics_render_path_append(urho3d_context*,hl_urho3d_graphics_render_path*,hl_urho3d_resource_xml_file*);
HL_API hl_urho3d_graphics_render_path* Urho3D__graphics_render_path_clone(urho3d_context*,hl_urho3d_graphics_render_path*);
HL_API hl_urho3d_graphics_render_path* Urho3D__graphics_render_path_create(urho3d_context*);
HL_API void Urho3D__graphics_render_set_enabled(urho3d_context*,hl_urho3d_graphics_render_path*,String,bool);
HL_API void Urho3D__graphics_render_set_shader_parameter(urho3d_context*,hl_urho3d_graphics_render_path*,String,hl_urho3d_variant*);
HL_API void Urho3D__graphics_render_toggle_enabled(urho3d_context*,hl_urho3d_graphics_render_path*,String);
HL_API void Urho3D__graphics_renderer_draw_debug_geometry(urho3d_context*,bool);
HL_API int Urho3D__graphics_renderer_get_num_viewports(urho3d_context*);
HL_API hl_urho3d_graphics_viewport* Urho3D__graphics_renderer_get_viewport(urho3d_context*,int);
HL_API hl_urho3d_graphics_viewport* Urho3D__graphics_renderer_get_viewport(urho3d_context*,int);
HL_API void Urho3D__graphics_renderer_set_num_viewports(urho3d_context*,int);
HL_API void Urho3D__graphics_renderer_set_viewport(urho3d_context*,int,hl_urho3d_graphics_viewport*);
HL_API void Urho3D__graphics_renderer_set_viewport(urho3d_context*,int,hl_urho3d_graphics_viewport*);
HL_API hl_urho3d_graphics_skybox* Urho3D__graphics_skybox_cast_from_component(urho3d_context*,hl_urho3d_scene_component*);
HL_API hl_urho3d_graphics_skybox* Urho3D__graphics_skybox_cast_from_staticmodel(urho3d_context*,hl_urho3d_graphics_staticmodel*);
HL_API hl_urho3d_scene_component* Urho3D__graphics_skybox_cast_to_component(urho3d_context*,hl_urho3d_graphics_skybox*);
HL_API hl_urho3d_graphics_staticmodel* Urho3D__graphics_skybox_cast_to_staticmodel(urho3d_context*,hl_urho3d_graphics_skybox*);
HL_API hl_urho3d_graphics_skybox* Urho3D__graphics_skybox_create(urho3d_context*);
HL_API hl_urho3d_graphics_staticmodel* Urho3D__graphics_staticmodel_cast_from_component(urho3d_context*,hl_urho3d_scene_component*);
HL_API hl_urho3d_scene_component* Urho3D__graphics_staticmodel_cast_to_component(urho3d_context*,hl_urho3d_graphics_staticmodel*);
HL_API hl_urho3d_graphics_staticmodel* Urho3D__graphics_staticmodel_create(urho3d_context*);
HL_API bool Urho3D__graphics_staticmodel_get_cast_shadows(urho3d_context*,hl_urho3d_graphics_staticmodel*);
HL_API hl_urho3d_graphics_material* Urho3D__graphics_staticmodel_get_material(urho3d_context*,hl_urho3d_graphics_staticmodel*);
HL_API hl_urho3d_graphics_model* Urho3D__graphics_staticmodel_get_model(urho3d_context*,hl_urho3d_graphics_staticmodel*);
HL_API bool Urho3D__graphics_staticmodel_get_occludee(urho3d_context*,hl_urho3d_graphics_staticmodel*);
HL_API bool Urho3D__graphics_staticmodel_get_occluder(urho3d_context*,hl_urho3d_graphics_staticmodel*);
HL_API void Urho3D__graphics_staticmodel_set_cast_shadows(urho3d_context*,hl_urho3d_graphics_staticmodel*,bool);
HL_API void Urho3D__graphics_staticmodel_set_material(urho3d_context*,hl_urho3d_graphics_staticmodel*,hl_urho3d_graphics_material*);
HL_API void Urho3D__graphics_staticmodel_set_model(urho3d_context*,hl_urho3d_graphics_staticmodel*,hl_urho3d_graphics_model*);
HL_API void Urho3D__graphics_staticmodel_set_occludee(urho3d_context*,hl_urho3d_graphics_staticmodel*,bool);
HL_API void Urho3D__graphics_staticmodel_set_occluder(urho3d_context*,hl_urho3d_graphics_staticmodel*,bool);
HL_API void Urho3D__graphics_tanimation_state_add_time(hl_urho3d_graphics_tanimation_state*,float);
HL_API void Urho3D__graphics_tanimation_state_add_weight(hl_urho3d_graphics_tanimation_state*,float);
HL_API bool Urho3D__graphics_tanimation_state_get_looped(hl_urho3d_graphics_tanimation_state*);
HL_API float Urho3D__graphics_tanimation_state_get_time(hl_urho3d_graphics_tanimation_state*);
HL_API float Urho3D__graphics_tanimation_state_get_weight(hl_urho3d_graphics_tanimation_state*);
HL_API void Urho3D__graphics_tanimation_state_set_looped(hl_urho3d_graphics_tanimation_state*,bool);
HL_API void Urho3D__graphics_tanimation_state_set_time(hl_urho3d_graphics_tanimation_state*,float);
HL_API void Urho3D__graphics_tanimation_state_set_weight(hl_urho3d_graphics_tanimation_state*,float);
HL_API hl_urho3d_graphics_technique* Urho3D__graphics_technique_create(urho3d_context*,String);
HL_API vbyte* Urho3D__graphics_technique_get_name(hl_urho3d_graphics_technique*);
HL_API hl_urho3d_graphics_texture* Urho3D__graphics_texture_create(urho3d_context*,String);
HL_API vbyte* Urho3D__graphics_texture_get_name(hl_urho3d_graphics_texture*);
HL_API hl_urho3d_graphics_viewport* Urho3D__graphics_viewport_create(urho3d_context*,hl_urho3d_scene_scene*,hl_urho3d_graphics_camera*);
HL_API hl_urho3d_graphics_viewport* Urho3D__graphics_viewport_create_r(urho3d_context*,hl_urho3d_scene_scene*,hl_urho3d_graphics_camera*,hl_urho3d_math_intrect*);
HL_API hl_urho3d_graphics_render_path* Urho3D__graphics_viewport_get_render_path(urho3d_context*,hl_urho3d_graphics_viewport*);
HL_API void Urho3D__graphics_viewport_set_render_path(urho3d_context*,hl_urho3d_graphics_viewport*,hl_urho3d_graphics_render_path*);
HL_API hl_urho3d_graphics_zone* Urho3D__graphics_zone_cast_from_component(urho3d_context*,hl_urho3d_scene_component*);
HL_API hl_urho3d_scene_component* Urho3D__graphics_zone_cast_to_component(urho3d_context*,hl_urho3d_graphics_zone*);
HL_API hl_urho3d_graphics_zone* Urho3D__graphics_zone_create(urho3d_context*);
HL_API hl_urho3d_color* Urho3D__graphics_zone_get_ambient_color(urho3d_context*,hl_urho3d_graphics_zone*);
HL_API hl_urho3d_math_boundingbox* Urho3D__graphics_zone_get_boundingbox(urho3d_context*,hl_urho3d_graphics_zone*);
HL_API hl_urho3d_color* Urho3D__graphics_zone_get_fog_color(urho3d_context*,hl_urho3d_graphics_zone*);
HL_API float Urho3D__graphics_zone_get_fog_end(urho3d_context*,hl_urho3d_graphics_zone*);
HL_API float Urho3D__graphics_zone_get_fog_start(urho3d_context*,hl_urho3d_graphics_zone*);
HL_API hl_urho3d_color* Urho3D__graphics_zone_set_ambient_color(urho3d_context*,hl_urho3d_graphics_zone*,hl_urho3d_color*);
HL_API hl_urho3d_math_boundingbox* Urho3D__graphics_zone_set_boundingbox(urho3d_context*,hl_urho3d_graphics_zone*,hl_urho3d_math_boundingbox*);
HL_API hl_urho3d_color* Urho3D__graphics_zone_set_fog_color(urho3d_context*,hl_urho3d_graphics_zone*,hl_urho3d_color*);
HL_API float Urho3D__graphics_zone_set_fog_end(urho3d_context*,hl_urho3d_graphics_zone*,float);
HL_API float Urho3D__graphics_zone_set_fog_start(urho3d_context*,hl_urho3d_graphics_zone*,float);
HL_API bool Urho3D__input_get_key_down(urho3d_context*,int);
HL_API bool Urho3D__input_get_key_down(urho3d_context*,int);
HL_API bool Urho3D__input_get_key_press(urho3d_context*,int);
HL_API bool Urho3D__input_get_key_press(urho3d_context*,int);
HL_API bool Urho3D__input_get_mouse_button_down(urho3d_context*,int);
HL_API bool Urho3D__input_get_mouse_button_press(urho3d_context*,int);
HL_API hl_urho3d_intvector2* Urho3D__input_get_mousemove(urho3d_context*);
HL_API int Urho3D__input_get_mousemove_x(urho3d_context*);
HL_API int Urho3D__input_get_mousemove_y(urho3d_context*);
HL_API int Urho3D__input_get_num_touches(urho3d_context*);
HL_API int Urho3D__input_get_touch_delta_x(urho3d_context*,int);
HL_API int Urho3D__input_get_touch_delta_y(urho3d_context*,int);
HL_API int Urho3D__input_get_touch_id(urho3d_context*,int);
HL_API int Urho3D__input_get_touch_last_position_x(urho3d_context*,int);
HL_API int Urho3D__input_get_touch_last_position_y(urho3d_context*,int);
HL_API int Urho3D__input_get_touch_position_x(urho3d_context*,int);
HL_API int Urho3D__input_get_touch_position_y(urho3d_context*,int);
HL_API float Urho3D__input_get_touch_pressure(urho3d_context*,int);
HL_API void Urho3D__input_set_mouse_mode(urho3d_context*,int);
HL_API void Urho3D__input_set_mouse_visible(urho3d_context*,bool);
HL_API hl_urho3d_input_touch_state* Urho3D__input_touch_state_get(urho3d_context*,int);
HL_API hl_urho3d_math_tintvector2* Urho3D__input_touch_state_get_delta(hl_urho3d_input_touch_state*);
HL_API int Urho3D__input_touch_state_get_id(hl_urho3d_input_touch_state*);
HL_API hl_urho3d_math_tintvector2* Urho3D__input_touch_state_get_last_position(hl_urho3d_input_touch_state*);
HL_API hl_urho3d_math_tintvector2* Urho3D__input_touch_state_get_position(hl_urho3d_input_touch_state*);
HL_API float Urho3D__input_touch_state_get_pressure(hl_urho3d_input_touch_state*);
HL_API int Urho3D__intvector2_get_x(hl_urho3d_intvector2*);
HL_API int Urho3D__intvector2_get_y(hl_urho3d_intvector2*);
HL_API int Urho3D__intvector2_set_x(hl_urho3d_intvector2*,int);
HL_API int Urho3D__intvector2_set_y(hl_urho3d_intvector2*,int);
HL_API hl_urho3d_math_boundingbox* Urho3D__math_boundingbox_create_ff(float,float);
HL_API hl_urho3d_math_boundingbox* Urho3D__math_boundingbox_create_v3_v3(hl_urho3d_math_vector3*,hl_urho3d_math_vector3*);
HL_API hl_urho3d_math_tvector3* Urho3D__math_boundingbox_get_max(hl_urho3d_math_boundingbox*);
HL_API hl_urho3d_math_tvector3* Urho3D__math_boundingbox_get_min(hl_urho3d_math_boundingbox*);
HL_API void Urho3D__math_boundingbox_set_max(hl_urho3d_math_boundingbox*,hl_urho3d_math_tvector3*);
HL_API void Urho3D__math_boundingbox_set_min(hl_urho3d_math_boundingbox*,hl_urho3d_math_tvector3*);
HL_API hl_urho3d_color* Urho3D__math_create_color(float,float,float,float);
HL_API hl_urho3d_math_intrect* Urho3D__math_intrect_create(int,int,int,int);
HL_API hl_urho3d_math_quaternion* Urho3D__math_quaternion_create(float,float,float);
HL_API hl_urho3d_math_quaternion* Urho3D__math_quaternion_create_fv(float,hl_urho3d_math_tvector3*);
HL_API void Urho3D__math_quaternion_set_euler_angles(hl_urho3d_math_quaternion*,float,float,float);
HL_API hl_urho3d_math_ray* Urho3D__math_ray_create(hl_urho3d_math_tvector3*,hl_urho3d_math_tvector3*);
HL_API hl_urho3d_math_tintvector2* Urho3D__math_tintvector2_cast_from_intvector2(hl_urho3d_intvector2*);
HL_API hl_urho3d_intvector2* Urho3D__math_tintvector2_cast_to_intvector2(hl_urho3d_math_tintvector2*);
HL_API hl_urho3d_math_tintvector2* Urho3D__math_tintvector2_create(int,int);
HL_API int Urho3D__math_tintvector2_get_x(hl_urho3d_math_tintvector2*);
HL_API int Urho3D__math_tintvector2_get_y(hl_urho3d_math_tintvector2*);
HL_API int Urho3D__math_tintvector2_set_x(hl_urho3d_math_tintvector2*,int);
HL_API int Urho3D__math_tintvector2_set_y(hl_urho3d_math_tintvector2*,int);
HL_API hl_urho3d_math_tquaternion* Urho3D__math_tquaternion_cast_from_quaternion(hl_urho3d_math_quaternion*);
HL_API hl_urho3d_math_quaternion* Urho3D__math_tquaternion_cast_to_quaternion(hl_urho3d_math_tquaternion*);
HL_API hl_urho3d_math_tquaternion* Urho3D__math_tquaternion_create(float,float,float);
HL_API hl_urho3d_math_tvector3* Urho3D__math_tquaternion_multiply_tvector3(hl_urho3d_math_tquaternion*,hl_urho3d_math_tvector3*);
HL_API hl_urho3d_tstringhash* Urho3D__math_tstringhash_cast_from_stringhash(hl_urho3d_stringhash*);
HL_API hl_urho3d_stringhash* Urho3D__math_tstringhash_cast_to_stringhash(hl_urho3d_tstringhash*);
HL_API hl_urho3d_tstringhash* Urho3D__math_tstringhash_create(String);
HL_API vbyte* Urho3D__math_tstringhash_get_string(hl_urho3d_tstringhash*);
HL_API hl_urho3d_tvariant* Urho3D__math_tvariant_cast_from_variant(hl_urho3d_variant*);
HL_API hl_urho3d_variant* Urho3D__math_tvariant_cast_to_variant(hl_urho3d_tvariant*);
HL_API hl_urho3d_math_tvector2* Urho3D__math_tvector2_cast_from_vector2(hl_urho3d_math_vector2*);
HL_API hl_urho3d_math_vector2* Urho3D__math_tvector2_cast_to_vector2(hl_urho3d_math_tvector2*);
HL_API hl_urho3d_math_tvector2* Urho3D__math_tvector2_create(float,float);
HL_API float Urho3D__math_tvector2_get_x(hl_urho3d_math_tvector2*);
HL_API float Urho3D__math_tvector2_get_y(hl_urho3d_math_tvector2*);
HL_API float Urho3D__math_tvector2_set_x(hl_urho3d_math_tvector2*,float);
HL_API float Urho3D__math_tvector2_set_y(hl_urho3d_math_tvector2*,float);
HL_API hl_urho3d_math_tvector3* Urho3D__math_tvector3_cast_from_vector3(hl_urho3d_math_vector3*);
HL_API hl_urho3d_math_vector3* Urho3D__math_tvector3_cast_to_vector3(hl_urho3d_math_tvector3*);
HL_API hl_urho3d_math_tvector3* Urho3D__math_tvector3_create(float,float,float);
HL_API float Urho3D__math_tvector3_get_x(hl_urho3d_math_tvector3*);
HL_API float Urho3D__math_tvector3_get_y(hl_urho3d_math_tvector3*);
HL_API float Urho3D__math_tvector3_get_z(hl_urho3d_math_tvector3*);
HL_API float Urho3D__math_tvector3_set_x(hl_urho3d_math_tvector3*,float);
HL_API float Urho3D__math_tvector3_set_y(hl_urho3d_math_tvector3*,float);
HL_API float Urho3D__math_tvector3_set_z(hl_urho3d_math_tvector3*,float);
HL_API float Urho3D__math_vector2_angle(hl_urho3d_math_vector2*,hl_urho3d_math_vector2*);
HL_API hl_urho3d_math_vector2* Urho3D__math_vector2_create(float,float);
HL_API float Urho3D__math_vector2_dot_product(hl_urho3d_math_vector2*,hl_urho3d_math_vector2*);
HL_API float Urho3D__math_vector2_dot_product(hl_urho3d_math_vector2*,hl_urho3d_math_vector2*);
HL_API bool Urho3D__math_vector2_equals(hl_urho3d_math_vector2*,hl_urho3d_math_vector2*);
HL_API float Urho3D__math_vector2_get_x(hl_urho3d_math_vector2*);
HL_API float Urho3D__math_vector2_get_y(hl_urho3d_math_vector2*);
HL_API bool Urho3D__math_vector2_is_inf(hl_urho3d_math_vector2*);
HL_API bool Urho3D__math_vector2_is_nan(hl_urho3d_math_vector2*);
HL_API float Urho3D__math_vector2_length(hl_urho3d_math_vector2*);
HL_API float Urho3D__math_vector2_length_squared(hl_urho3d_math_vector2*);
HL_API hl_urho3d_math_vector2* Urho3D__math_vector2_lerp(hl_urho3d_math_vector2*,hl_urho3d_math_vector2*,float);
HL_API void Urho3D__math_vector2_normalize(hl_urho3d_math_vector2*);
HL_API hl_urho3d_math_vector2* Urho3D__math_vector2_normalized(hl_urho3d_math_vector2*);
HL_API hl_urho3d_math_vector2* Urho3D__math_vector2_normalized_or_default(hl_urho3d_math_vector2*,hl_urho3d_math_vector2*,float);
HL_API float Urho3D__math_vector2_project_onto_axis(hl_urho3d_math_vector2*,hl_urho3d_math_vector2*);
HL_API hl_urho3d_math_vector2* Urho3D__math_vector2_renormalized(hl_urho3d_math_vector2*,float,float,hl_urho3d_math_vector2*,float);
HL_API float Urho3D__math_vector2_set_x(hl_urho3d_math_vector2*,float);
HL_API float Urho3D__math_vector2_set_y(hl_urho3d_math_vector2*,float);
HL_API float Urho3D__math_vector3_angle(hl_urho3d_math_vector3*,hl_urho3d_math_vector3*);
HL_API hl_urho3d_math_vector3* Urho3D__math_vector3_create(float,float,float);
HL_API float Urho3D__math_vector3_dot_product(hl_urho3d_math_vector3*,hl_urho3d_math_vector3*);
HL_API float Urho3D__math_vector3_dot_product(hl_urho3d_math_vector3*,hl_urho3d_math_vector3*);
HL_API bool Urho3D__math_vector3_equals(hl_urho3d_math_vector3*,hl_urho3d_math_vector3*);
HL_API float Urho3D__math_vector3_get_x(hl_urho3d_math_vector3*);
HL_API float Urho3D__math_vector3_get_y(hl_urho3d_math_vector3*);
HL_API float Urho3D__math_vector3_get_z(hl_urho3d_math_vector3*);
HL_API bool Urho3D__math_vector3_is_inf(hl_urho3d_math_vector3*);
HL_API bool Urho3D__math_vector3_is_nan(hl_urho3d_math_vector3*);
HL_API float Urho3D__math_vector3_length(hl_urho3d_math_vector3*);
HL_API float Urho3D__math_vector3_length_squared(hl_urho3d_math_vector3*);
HL_API hl_urho3d_math_vector3* Urho3D__math_vector3_lerp(hl_urho3d_math_vector3*,hl_urho3d_math_vector3*,float);
HL_API void Urho3D__math_vector3_normalize(hl_urho3d_math_vector3*);
HL_API hl_urho3d_math_vector3* Urho3D__math_vector3_normalized(hl_urho3d_math_vector3*);
HL_API hl_urho3d_math_vector3* Urho3D__math_vector3_normalized_or_default(hl_urho3d_math_vector3*,hl_urho3d_math_vector3*,float);
HL_API float Urho3D__math_vector3_project_onto_axis(hl_urho3d_math_vector3*,hl_urho3d_math_vector3*);
HL_API hl_urho3d_math_vector3* Urho3D__math_vector3_renormalized(hl_urho3d_math_vector3*,float,float,hl_urho3d_math_vector3*,float);
HL_API float Urho3D__math_vector3_set_x(hl_urho3d_math_vector3*,float);
HL_API float Urho3D__math_vector3_set_y(hl_urho3d_math_vector3*,float);
HL_API float Urho3D__math_vector3_set_z(hl_urho3d_math_vector3*,float);
HL_API hl_urho3d_physics_collision_shape* Urho3D__physics_collision_shape_cast_from_component(urho3d_context*,hl_urho3d_scene_component*);
HL_API hl_urho3d_scene_component* Urho3D__physics_collision_shape_cast_to_component(urho3d_context*,hl_urho3d_physics_collision_shape*);
HL_API hl_urho3d_physics_collision_shape* Urho3D__physics_collision_shape_create(urho3d_context*);
HL_API void Urho3D__physics_collision_shape_set_box(urho3d_context*,hl_urho3d_physics_collision_shape*,hl_urho3d_math_tvector3*,hl_urho3d_math_tvector3*,hl_urho3d_math_tquaternion*);
HL_API hl_urho3d_physics_rigid_body* Urho3D__physics_rigid_body_cast_from_component(urho3d_context*,hl_urho3d_scene_component*);
HL_API hl_urho3d_scene_component* Urho3D__physics_rigid_body_cast_to_component(urho3d_context*,hl_urho3d_physics_rigid_body*);
HL_API hl_urho3d_physics_rigid_body* Urho3D__physics_rigid_body_create(urho3d_context*);
HL_API float Urho3D__physics_rigid_body_get_friction(urho3d_context*,hl_urho3d_physics_rigid_body*);
HL_API hl_urho3d_math_tvector3* Urho3D__physics_rigid_body_get_linear_velocity(urho3d_context*,hl_urho3d_physics_rigid_body*);
HL_API float Urho3D__physics_rigid_body_get_mass(urho3d_context*,hl_urho3d_physics_rigid_body*);
HL_API void Urho3D__physics_rigid_body_set_friction(urho3d_context*,hl_urho3d_physics_rigid_body*,float);
HL_API void Urho3D__physics_rigid_body_set_linear_velocity(urho3d_context*,hl_urho3d_physics_rigid_body*,hl_urho3d_math_tvector3*);
HL_API void Urho3D__physics_rigid_body_set_mass(urho3d_context*,hl_urho3d_physics_rigid_body*,float);
HL_API void Urho3D__run_application(hl_urho3d_application*);
HL_API hl_urho3d_scene_component* Urho3D__scene_component_create(urho3d_context*);
HL_API hl_urho3d_scene_node* Urho3D__scene_component_get_node(urho3d_context*,hl_urho3d_scene_component*);
HL_API hl_urho3d_scene_logic_component* Urho3D__scene_logic_component_cast_from_component(urho3d_context*,hl_urho3d_scene_component*);
HL_API hl_urho3d_scene_component* Urho3D__scene_logic_component_cast_to_component(urho3d_context*,hl_urho3d_scene_logic_component*);
HL_API hl_urho3d_scene_logic_component* Urho3D__scene_logic_component_create(urho3d_context*,vdynamic*);
HL_API void Urho3D__scene_node_add_component(urho3d_context*,hl_urho3d_scene_node*,hl_urho3d_scene_component*,int,int);
HL_API hl_urho3d_scene_node* Urho3D__scene_node_create(urho3d_context*);
HL_API hl_urho3d_scene_node* Urho3D__scene_node_create_child(urho3d_context*,hl_urho3d_scene_node*,String,int,int,bool);
HL_API hl_urho3d_scene_component* Urho3D__scene_node_create_component(urho3d_context*,hl_urho3d_scene_node*,String,int,int);
HL_API hl_urho3d_scene_pod_node* Urho3D__scene_node_get_children_with_component(urho3d_context*,hl_urho3d_scene_node*,hl_urho3d_tstringhash*,bool);
HL_API hl_urho3d_scene_component* Urho3D__scene_node_get_component(urho3d_context*,hl_urho3d_scene_node*,String,bool);
HL_API hl_urho3d_math_tvector3* Urho3D__scene_node_get_direction(urho3d_context*,hl_urho3d_scene_node*);
HL_API hl_urho3d_scene_node* Urho3D__scene_node_get_from_pod_vector(urho3d_context*,hl_urho3d_scene_pod_node*,int);
HL_API int Urho3D__scene_node_get_pod_vector_size(urho3d_context*,hl_urho3d_scene_pod_node*);
HL_API hl_urho3d_math_tvector3* Urho3D__scene_node_get_position(urho3d_context*,hl_urho3d_scene_node*);
HL_API hl_urho3d_math_tquaternion* Urho3D__scene_node_get_rotation(urho3d_context*,hl_urho3d_scene_node*);
HL_API hl_urho3d_math_tvector3* Urho3D__scene_node_get_scale(urho3d_context*,hl_urho3d_scene_node*);
HL_API void Urho3D__scene_node_pitch(urho3d_context*,hl_urho3d_scene_node*,float,int);
HL_API void Urho3D__scene_node_roll(urho3d_context*,hl_urho3d_scene_node*,float,int);
HL_API void Urho3D__scene_node_rotate(urho3d_context*,hl_urho3d_scene_node*,hl_urho3d_math_tquaternion*,int);
HL_API void Urho3D__scene_node_rotate_euler(urho3d_context*,hl_urho3d_scene_node*,float,float,float,int);
HL_API void Urho3D__scene_node_set_direction(urho3d_context*,hl_urho3d_scene_node*,hl_urho3d_math_tvector3*);
HL_API void Urho3D__scene_node_set_position(urho3d_context*,hl_urho3d_scene_node*,hl_urho3d_math_tvector3*);
HL_API void Urho3D__scene_node_set_rotation(urho3d_context*,hl_urho3d_scene_node*,hl_urho3d_math_tquaternion*);
HL_API void Urho3D__scene_node_set_scale(urho3d_context*,hl_urho3d_scene_node*,hl_urho3d_math_tvector3*);
HL_API void Urho3D__scene_node_translate(urho3d_context*,hl_urho3d_scene_node*,hl_urho3d_math_tvector3*,int);
HL_API void Urho3D__scene_node_yaw(urho3d_context*,hl_urho3d_scene_node*,float,int);
HL_API hl_urho3d_scene_node* Urho3D__scene_scene_cast_to_node(urho3d_context*,hl_urho3d_scene_scene*);
HL_API hl_urho3d_scene_scene* Urho3D__scene_scene_create(urho3d_context*);
HL_API hl_urho3d_graphics_octree* Urho3D__scene_scene_get_octree(urho3d_context*,hl_urho3d_scene_scene*);
HL_API hl_urho3d_tvariant* Urho3D__set_key_value(hl_urho3d_variantmap*,hl_urho3d_tstringhash*,hl_urho3d_tvariant*);
HL_API void Urho3D__setup_closure_application(hl_urho3d_application*,vclosure*);
HL_API void Urho3D__start_closure_application(hl_urho3d_application*,vclosure*);
HL_API void Urho3D__stop_closure_application(hl_urho3d_application*,vclosure*);
HL_API float Urho3D__tvariant_get_float(hl_urho3d_tvariant*);
HL_API int Urho3D__tvariant_get_int(hl_urho3d_tvariant*);
HL_API hl_urho3d_math_tintvector2* Urho3D__tvariant_get_tintvector2(hl_urho3d_tvariant*);
HL_API hl_urho3d_math_tvector2* Urho3D__tvariant_get_tvector2(hl_urho3d_tvariant*);
HL_API hl_urho3d_math_vector2* Urho3D__tvariant_get_vector2(hl_urho3d_tvariant*);
HL_API void Urho3D__tvariant_set_float(hl_urho3d_tvariant*,float);
HL_API void Urho3D__tvariant_set_int(hl_urho3d_tvariant*,int);
HL_API void Urho3D__tvariant_set_tintvector2(hl_urho3d_tvariant*,hl_urho3d_math_tintvector2*);
HL_API void Urho3D__tvariant_set_tvector2(hl_urho3d_tvariant*,hl_urho3d_math_tvector2*);
HL_API void Urho3D__tvariant_set_vector2(hl_urho3d_tvariant*,hl_urho3d_math_vector2*);
HL_API float Urho3D__variant_get_float(hl_urho3d_variant*);
HL_API int Urho3D__variant_get_int(hl_urho3d_variant*);
HL_API hl_urho3d_math_tintvector2* Urho3D__variant_get_tintvector2(hl_urho3d_variant*);
HL_API hl_urho3d_math_tvector2* Urho3D__variant_get_tvector2(hl_urho3d_variant*);
HL_API hl_urho3d_math_vector2* Urho3D__variant_get_vector2(hl_urho3d_variant*);
HL_API void Urho3D__variant_set_float(hl_urho3d_variant*,float);
HL_API void Urho3D__variant_set_int(hl_urho3d_variant*,int);
HL_API void Urho3D__variant_set_tintvector2(hl_urho3d_variant*,hl_urho3d_math_tintvector2*);
HL_API void Urho3D__variant_set_tvector2(hl_urho3d_variant*,hl_urho3d_math_tvector2*);
HL_API void Urho3D__variant_set_vector2(hl_urho3d_variant*,hl_urho3d_math_vector2*);
HL_API void ssl_ssl_init(void);
HL_API varray* hl_alloc_array(hl_type*,int);
HL_API vbyte* hl_alloc_bytes(int);
HL_API vdynamic* hl_alloc_obj(hl_type*);
HL_API void hl_array_blit(varray*,int,varray*,int,int);
HL_API hl_type* hl_array_type(varray*);
HL_API void hl_breakpoint(void);
HL_API void hl_bsort_f64(vbyte*,int,int,vclosure*);
HL_API void hl_bsort_i32(vbyte*,int,int,vclosure*);
HL_API void hl_bytes_blit(vbyte*,int,vbyte*,int,int);
HL_API int hl_bytes_compare(vbyte*,int,vbyte*,int,int);
HL_API int hl_bytes_compare16(vbyte*,vbyte*,int);
HL_API void hl_bytes_fill(vbyte*,int,int,int);
HL_API int hl_bytes_find(vbyte*,int,int,vbyte*,int,int);
HL_API vdynamic* hl_call_method(vdynamic*,varray*);
HL_API int hl_date_new(int,int,int,int,int,int);
HL_API vbyte* hl_date_to_string(int,int*);
HL_API varray* hl_exception_stack(void);
HL_API vbyte* hl_ftos(double,int*);
HL_API vdynamic* hl_get_closure_value(vdynamic*);
HL_API vdynamic* hl_get_virtual_value(vdynamic*);
HL_API hl_bytes_map* hl_hballoc(void);
HL_API void hl_hbset(hl_bytes_map*,vbyte*,vdynamic*);
HL_API vbyte* hl_itos(int,int*);
HL_API vdynamic* hl_make_closure(vdynamic*,vdynamic*);
HL_API vdynamic* hl_make_var_args(vclosure*);
HL_API vdynamic* hl_no_closure(vdynamic*);
HL_API bool hl_obj_delete_field(vdynamic*,int);
HL_API vdynamic* hl_obj_get_field(vdynamic*,int);
HL_API bool hl_obj_has_field(vdynamic*,int);
HL_API void hl_obj_set_field(vdynamic*,int,vdynamic*);
HL_API int hl_ptr_compare(vdynamic*,vdynamic*);
HL_API hl_random* hl_rnd_init_system(void);
HL_API int hl_rnd_int(hl_random*);
HL_API void hl_set_error_handler(vclosure*);
HL_API void hl_socket_init(void);
HL_API bool hl_sys_is64(void);
HL_API void hl_sys_print(vbyte*);
HL_API bool hl_sys_utf8_path(void);
HL_API varray* hl_type_enum_fields(hl_type*);
HL_API varray* hl_type_enum_values(hl_type*);
HL_API vbyte* hl_type_name(hl_type*);
HL_API bool hl_type_safe_cast(hl_type*,hl_type*);
HL_API bool hl_type_set_global(hl_type*,vdynamic*);
HL_API vbyte* hl_ucs2_lower(vbyte*,int,int);
HL_API vbyte* hl_ucs2_upper(vbyte*,int,int);
HL_API int hl_ucs2length(vbyte*,int);
HL_API vbyte* hl_utf16_to_utf8(vbyte*,int,int*);
HL_API vbyte* hl_utf8_to_utf16(vbyte*,int,int*);
HL_API vdynamic* hl_value_cast(vdynamic*,hl_type*);
HL_API vbyte* hl_value_to_string(vdynamic*,int*);
#endif

