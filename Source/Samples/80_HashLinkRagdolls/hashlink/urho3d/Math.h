// Generated by HLC 4.1.2 (HL v4)
#ifndef INC_urho3d__Math
#define INC_urho3d__Math
typedef struct _urho3d__$Math *urho3d__$Math;
typedef struct _urho3d__Math *urho3d__Math;
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <haxe/_Int64/___Int64.h>


struct _urho3d__$Math {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __name__;
	vdynamic* __constructor__;
	double _PI_;
	double _HALF_PI_;
	double _EPSILON_;
	double _LARGE_EPSILON_;
	double _MIN_NEARCLIP_;
	double _MAX_FOV_;
	double _LARGE_VALUE_;
	double _INFINITY_;
	double _DEGTORAD_;
	double _DEGTORAD_2_;
	double _RADTODEG_;
	int _MIN_INT_;
	int _MAX_INT_;
	int _MIN_UNSIGNED_;
	int _MAX_UNSIGNED_;
	vclosure* Lerp;
	vclosure* InverseLerp;
	vclosure* Max;
	vclosure* Min;
	vclosure* Abs;
	vclosure* Sign;
	vclosure* ToRadians;
	vclosure* ToDegrees;
	vclosure* IsNaN;
	vclosure* IsInf;
	vclosure* Clamp;
	vclosure* SmoothStep;
	vclosure* Sin;
	vclosure* Cos;
	vclosure* Tan;
	vclosure* Asin;
	vclosure* Acos;
	vclosure* Atan;
	vclosure* Atan2;
	vclosure* Pow;
	vclosure* Ln;
	vclosure* Sqrt;
	vclosure* Mod;
	vclosure* AbsMod;
	vclosure* Fract;
	vclosure* Floor;
	vclosure* FloorToInt;
	vclosure* Round;
	vclosure* RoundToInt;
	vclosure* RoundToNearestMultiple;
	vclosure* Ceil;
	vclosure* CeilToInt;
	vclosure* IsPowerOfTwo;
	vclosure* NextPowerOfTwo;
	vclosure* ClosestPowerOfTwo;
	vclosure* LogBaseTwo;
	vclosure* CountSetBits;
	vclosure* SDBMHash;
	vclosure* Random;
	vclosure* RandStandardNormal;
	vclosure* RandomNormal;
	vclosure* ExponentialOut;
	vclosure* BackInOut;
	vclosure* CubicBezier;
	vclosure* QuadBezier;
};
struct _urho3d__Math {
	hl_type *$type;
};
#endif

