// Generated by HLC 4.1.2 (HL v4)
#ifndef INC_urho3d___TRigidBody__TRigidBody_Impl_
#define INC_urho3d___TRigidBody__TRigidBody_Impl_
typedef struct _urho3d___TRigidBody__$TRigidBody_Impl_ *urho3d___TRigidBody__$TRigidBody_Impl_;
typedef struct _urho3d___TRigidBody__TRigidBody_Impl_ *urho3d___TRigidBody__TRigidBody_Impl_;
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <hl/natives.h>
#include <urho3d/RigidBody.h>


struct _urho3d___TRigidBody__$TRigidBody_Impl_ {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __name__;
	vdynamic* __constructor__;
	vclosure* set_mass;
	vclosure* get_mass;
	vclosure* set_friction;
	vclosure* get_friction;
	vclosure* set_rollingFriction;
	vclosure* get_rollingFriction;
	vclosure* set_linearVelocity;
	vclosure* get_linearVelocity;
	vclosure* set_trigger;
	vclosure* get_trigger;
	vclosure* set_linearDamping;
	vclosure* get_linearDamping;
	vclosure* set_angularDamping;
	vclosure* get_angularDamping;
	vclosure* set_linearRestThreshold;
	vclosure* get_linearRestThreshold;
	vclosure* set_angularRestThreshold;
	vclosure* get_angularRestThreshold;
	vclosure* set_collisionLayer;
	vclosure* get_collisionLayer;
	vclosure* set_collisionMask;
	vclosure* get_collisionMask;
	vclosure* get_kinematic;
	vclosure* set_kinematic;
	vclosure* ApplyImpulse;
	vclosure* set_angularFactor;
	vclosure* get_angularFactor;
	vclosure* set_collisionEventMode;
	vclosure* get_collisionEventMode;
	vclosure* ToRigidBody;
	vclosure* ToAbstractRigidBody;
};
struct _urho3d___TRigidBody__TRigidBody_Impl_ {
	hl_type *$type;
};
#endif

